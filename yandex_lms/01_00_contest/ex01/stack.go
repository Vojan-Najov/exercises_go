/*
Стек

В программировании стек представляет собой контейнер, в который элементы включаются и
удаляются только с одного конца, называемого вершиной стека. Когда элемент добавляется
в стек, он располагается на вершине, а при удалении элемента из стека удаляется
последний добавленный элемент.

Создайте структуру Stack, которая может содержать элементы любого типа, используя
дженерики. Реализуйте следующие методы:
- Push(key T) - добавление элемента в стек
- Pop() (T, error) - удаление элемента из стека. В случае успеха должен вернуть
значение удаленного элемента, если же список пуст - ошибку.

*/

package main

import (
	"errors"
)

type Stack[T any] struct {
	arr []T
}

func (s *Stack[T]) Push(key T) {
	s.arr = append(s.arr, key)
}

func (s *Stack[T]) Pop() (T, error) {
	var result T
	if len(s.arr) == 0 {
		return result, errors.New("stack underflow")
	}
	result = s.arr[len(s.arr)-1]
	s.arr = s.arr[0 : len(s.arr)-1]
	return result, nil
}
